<program>       ::= <invocation> <block>* <closure>

<invocation>    ::= "Start" "Ritual:" <stmt_list>

<closure>       ::= "Finally:" <stmt_list>

<block>         ::= <make_block> 
                  | <loop_block>
                  | <eternal_block>
                  | <stmt_list>

<make_block>    ::= "Make:" <stmt_list>

<loop_block>    ::= "While" <expr> ":" <stmt_list>

<eternal_block> ::= "While" "true:" <stmt_list>
                  | "While" "false:" <stmt_list>

<stmt_list>     ::= <stmt>*
<stmt>          ::= <assign>
                  | <print>
                  | <if_block>
                  | <while_block>
                  | <expr_stmt>
                  | "end()"

<assign>        ::= <ident> "=" <expr> ["until" <expr>]

<print>         ::= "print" "(" <expr> ")"

<if_block>      ::= "If" <expr> ":" <stmt_list> 
                    ("Elif" <expr> ":" <stmt_list>)* 
                    ["Else:" <stmt_list>]

<expr_stmt>     ::= <expr>

<expr>          ::= <literal>
                  | <ident>
                  | <expr> <binop> <expr>
                  | <expr> "in" "[" <range> "]"
                  | "(" <expr> ")"

<binop>         ::= "+" | "-" | "*" | "/" | "==" | "!=" | ">" | "<" | ">=" | "<=" | "and" | "or"

<range>         ::= <number> "..." <number>

<literal>       ::= <string> | <number> | "true" | "false"
<ident>         ::= [a-zA-Z_][a-zA-Z0-9_]*
<string>        ::= '"' [^"]* '"'
<number>        ::= [0-9]+

<program>       ::= <invocation> <block>* <closure>

<invocation>    ::= "Start" "Ritual:" <stmt_list>
<closure>       ::= "Finally:" <stmt_list>

<block>         ::= <make_block> | <loop_block> | <stmt_list>
<make_block>    ::= "Make:" <stmt_list>
<loop_block>    ::= "While" <expr> ":" <stmt_list>

<stmt_list>     ::= <stmt>*
<stmt>          ::= <assign> | <print> | <if_block> | <while_block> | <expr_stmt> | "end()"

<assign>        ::= <ident> "=" <expr> ["until" <expr>]
<print>         ::= "print" "(" <expr> ")"
<if_block>      ::= "If" <expr> ":" <stmt_list> ("Elif" <expr> ":" <stmt_list>)* ["Else:" <stmt_list>]

<expr_stmt>     ::= <expr>
<expr>          ::= <literal> | <ident> | <expr> <binop> <expr> | <expr> "in" "[" <range> "]" | "(" <expr> ")"

<binop>         ::= "+" | "-" | "*" | "/" | "==" | "!=" | ">" | "<" | ">=" | "<=" | "and" | "or"
<range>         ::= <number> "..." <number>
<literal>       ::= <string> | <number> | "true" | "false"
<ident>         ::= [a-zA-Z_][a-zA-Z0-9_]*
<string>        ::= '"' [^"]* '"'
<number>        ::= [0-9]+
