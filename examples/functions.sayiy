// Function Examples
// Demonstrating function definitions and calls

// Simple function
fn greet(name) {
    return "Hello, " + name + "!"
}

print(greet("Alice"))
print(greet("World"))

// Function with multiple parameters
fn add(a, b) {
    return a + b
}

print("5 + 3 =", add(5, 3))

// Recursive function
fn factorial(n) {
    if n <= 1 {
        return 1
    } else {
        return n * factorial(n - 1)
    }
}

print("Factorial of 5:", factorial(5))
print("Factorial of 7:", factorial(7))

// Arrow function
let square = (x) => x * x
let double = (x) => x * 2

print("Square of 8:", square(8))
print("Double of 12:", double(12))

// Higher-order function
fn apply_twice(func, value) {
    return func(func(value))
}

print("Apply double twice to 3:", apply_twice(double, 3))
print("Apply square twice to 2:", apply_twice(square, 2))