Start Ritual:
    string banner = "=== Sayit Multi-User Chat + File Share (Reactions) ==="
    print(banner)
    print("Commands: join [room], chat, sendfile, getfile, dm [user], who, status [msg], broadcast [msg], role [user] [role], kick [user], ban [user], unban [user], invite [user] [room], react [room] [line#] [emoji], quit")
    print("Users can react to messages with emojis. Example: react dev 12 üëç")
    end()

Make:
    current_room = ""
    username = ""
    role = "user"
    known_updates = {}
    known_dms = {}
    user_status = "Available"

# Ask username
_arg_prompt = "Enter your username: "
input_line()
username = _out_input

# Ban check
_arg_path = "banlist.txt"
import_file()
banned = _out_imported_source
If contains(banned, username):
    print("‚õî Access denied. " + username + " is banned.")
    exit()

print("Welcome, " + username + "!")

# Role check
_arg_path = "roles.txt"
import_file()
rolelist = _out_imported_source
If not contains(rolelist, username):
    _arg_path = "roles.txt"
    _arg_data = username + ":user\n"
    append_file()
    role = "user"
Else:
    role = parse_role(rolelist, username)

print("Your role is: " + role)

# Add to presence
get_time()
ts = _out_time
_arg_path = "presence.txt"
_arg_data = username + " (online since " + ts + ") [" + user_status + "] {" + role + "}\n"
append_file()

While true:
    # Notifications for rooms
    rooms_list = ["general", "dev", "music", "adminroom", "announcements", "secrets"]
    For room in rooms_list:
        _arg_path = room + "_messages.txt"
        import_file()
        log = _out_imported_source
        count = line_count(log)

        If known_updates[room] < count:
            new_count = count - known_updates[room]
            print("üîî [" + room + "] " + str(new_count) + " new message(s)/file(s).")
            known_updates[room] = count

    # Notifications for DMs
    _arg_path = "dm_" + username + ".txt"
    import_file()
    dm_log = _out_imported_source
    dm_count = line_count(dm_log)

    If known_dms[username] < dm_count:
        new_dm_count = dm_count - known_dms[username]
        print("üíå You have " + str(new_dm_count) + " new direct message(s).")
        known_dms[username] = dm_count

    # Input
    _arg_prompt = "Command: "
    input_line()
    cmd = _out_input

    # Quit
    If cmd == "quit":
        get_time()
        ts = _out_time

        _arg_path = "presence.txt"
        import_file()
        lines = _out_imported_source
        new_lines = remove_line(lines, username)
        new_lines = new_lines + username + " (last seen at " + ts + ") [" + user_status + "] {" + role + "}\n"
        _arg_data = new_lines
        export_file()

        print("Goodbye " + username + "!")
        break

    # React to a message
    Elif cmd startswith "react ":
        parts = split(cmd, " ")
        target_room = parts[1]
        target_line = parts[2]
        emoji = parts[3]

        _arg_path = target_room + "_messages.txt"
        import_file()
        lines = _out_imported_source

        # Attach reaction
        new_lines = add_reaction(lines, target_line, username, emoji)

        _arg_data = new_lines
        export_file()

        print("‚úÖ Reaction " + emoji + " added to line " + target_line + " in " + target_room + ".")

    # Chat, join, sendfile, getfile, dm, status, broadcast, role, kick, ban, unban, invite
    # (same as before, unchanged for brevity)

    Else:
        print("Unknown command. Try: join [room], chat, sendfile, getfile, dm [user], status [msg], broadcast [msg], role [user] [role], kick [user], ban [user], unban [user], invite [user] [room], react [room] [line#] [emoji], who, quit")
